kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "fluentd.fullname" . }}
  labels:
    {{- include "fluentd.labels" . | nindent 4 }}
  annotations:
    {{- include "fluentd.annotations" . | nindent 4 }}
data:
  fluent.conf: |
    @include kubernetes.conf
    {{- if .Values.useSystemdConf }}
    @include systemd.conf
    {{- end }}

    <system>
      log_level "#{ENV['FLUENT_LOG_LEVEL'] || 'warn'}"
    </system>

    <label @PROCESS_AFTER_CONCAT>
      {{- if .Values.useSystemdConf }}
      <filter {{ .Values.systemd.tag | default "systemd.al2023" }}>
        @type record_transformer
        enable_ruby
        <record>
          message ${record["MESSAGE"]}
          timestamp ${record["__REALTIME_TIMESTAMP"]}
          source_tag {{ .Values.systemd.tag | default "systemd.al2023" }}
          {{- if .Values.fluent.device_less_logs }}
          resource.service.name ${ENV['K8S_NODE_NAME']}
          {{- end }}
          {{- if or .Values.kubernetes.cluster_name .Values.global.clusterName }}
          {{ include "kubernetes.cluster_name" . | nindent 10 }}
          {{- end }}
        </record>
        remove_keys MESSAGE
      </filter>
      {{- end }}

      <filter kubernetes.**>
        @type kubernetes_metadata
        @id filter_kube_metadata
        kubernetes_url "#{ENV['FLUENT_FILTER_KUBERNETES_URL'] || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT') + '/api'}"
        verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
        ca_file "#{ENV['KUBERNETES_CA_FILE']}"
        skip_labels "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS'] || 'false'}"
        skip_container_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA'] || 'false'}"
        skip_master_url "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL'] || 'false'}"
        skip_namespace_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA'] || 'false'}"
      </filter>

      <filter kubernetes.**>
        @type record_transformer
        enable_ruby
        <record>
          message ${record["log"]} ${record["message"]}
          timestamp ${record["time"]}
          {{- if or .Values.kubernetes.cluster_name .Values.global.clusterName }}
          {{ include "kubernetes.cluster_name" . | nindent 8 }}
          {{- end }}
          {{- if .Values.fluent.device_less_logs }}
          resource.service.name '${record.dig("kubernetes","labels","app") != nil ? record.dig("kubernetes","labels","app") : record.dig("kubernetes","labels","app_kubernetes_io/name") != nil ? record.dig("kubernetes","labels","app_kubernetes_io/name") : record.dig("kubernetes","container_name") != nil ? record.dig("kubernetes","container_name") : record.dig("kubernetes","pod_name") != nil ? record.dig("kubernetes","pod_name") : "unknown"}'
          resource.service.namespace ${record["kubernetes"]["namespace_name"]}
          {{- end }}
        </record>
        remove_keys log
      </filter>

      {{ include "fluentd.lmMatch" (dict "tag" "kubernetes.**" "resource_mapping" "{\"kubernetes.pod_name\": \"auto.name\"}" "context" .) | nindent 6 }}
      {{- if .Values.useSystemdConf }}
      {{ include "fluentd.lmMatch" (dict "tag" (.Values.systemd.tag | default "systemd.al2023") "resource_mapping" "{\"_HOSTNAME\": \"system.hostname\"}" "context" .) | nindent 6 }}
      {{- end }}
    </label>

  kubernetes.conf: |
    <source>
      @type tail
      @id in_tail_container_logs
      path /var/log/containers/*.log
      pos_file /var/log/fluentd-containers.log.pos
      tag "#{ENV['FLUENT_CONTAINER_TAIL_TAG'] || 'kubernetes.*'}"
      exclude_path "#{ENV['FLUENT_CONTAINER_TAIL_EXCLUDE_PATH'] || '/var/log/containers/{{ .Chart.Name }}*.log' }"
      <parse>
        @type "#{ENV['FLUENT_CONTAINER_TAIL_PARSER_TYPE'] || 'multi_format'}"
        <pattern>
          format json
          keep_time_key true
          time_format %Y-%m-%dT%H:%M:%S.%NZ
        </pattern>
        <pattern>
          format syslog
        </pattern>
        <pattern>
          format none
        </pattern>
      </parse>
    </source>

    <filter kubernetes.**>
      @type concat
      key {{ .Values.kubernetes.multiline_concat_key }}
      separator ""
      multiline_start_regexp {{ .Values.kubernetes.multiline_start_regexp }}
      timeout_label @PROCESS_AFTER_CONCAT
    </filter>

    <match kubernetes.**>
      @type relabel
      @label @PROCESS_AFTER_CONCAT
    </match>

    {{ include "fluentd.systemdConfBlock" (dict "context" .) | indent 2 }}
