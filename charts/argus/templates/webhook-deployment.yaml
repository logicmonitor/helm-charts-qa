{{- if .Values.webhook.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "lmutil.fullname" . }}-webhook
  namespace: {{ include "lmutil.release.namespace" . }}
  labels:
    {{ include "argus.labels" . | nindent 4 }}
    app.kubernetes.io/component: webhook
  annotations:
    {{ include "argus.annotations" . | nindent 4 }}
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ include "lmutil.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        {{ include "argus.labels" . | nindent 8 }}
        app.kubernetes.io/component: webhook
      annotations:
        {{ include "argus.annotations" . | nindent 8 }}
    spec:
      securityContext: {{ include "lmutil.pod-sec-context-nonroot" (list . "lmutil.custom-pod-sec-context-nonroot") | nindent 8 }}
      serviceAccountName: {{ include "lmutil.serviceAccountName" . }}
      containers:
        - name: webhook
          securityContext: {{ include "lmutil.container-sec-context-nonroot" (list . "lmutil.custom-container-sec-context-nonroot") | nindent 12 }}
          image: {{ include "webhook-image" . }}
          imagePullPolicy: {{ .Values.webhook.image.pullPolicy | default (.Values.global.image.pullPolicy | default "Always") }}
          ports:
            - name: webhook-api
              containerPort: 8443
              protocol: TCP
          env:
            - name: USER_DEFINED_SECRET
              value: {{ .Values.global.userDefinedSecret | quote }}
            - name: COMPANY_DOMAIN
              value: {{ .Values.global.companyDomain | default "logicmonitor.com" | quote }}
            - name: DESIRED_REPLICAS
              value: {{ .Values.replicas | quote }}
            - name: RELEASE_NAME
              value: {{ .Release.Name | quote }}
          volumeMounts:
            - name: webhook-certs
              mountPath: /etc/webhook/certs
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: webhook-api
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: webhook-api
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.webhook.resources | nindent 12 }}
      volumes:
        - name: webhook-certs
          secret:
            secretName: {{ include "lmutil.fullname" . }}-webhook-certs
      {{- with .Values.webhook.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.webhook.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
